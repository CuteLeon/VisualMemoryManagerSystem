重定位 整理碎片
控件设置分页大小
创建进程时 分页 创建页表（进程页与物理内存页对应）

下方留两个长条区域放置两个空白区域链表（按首地址大小和内存大小排序） 链表用不同颜色的箭头表示不同算法要选择的空白区域，有算法选择下拉框决定要用哪个空白区域

连续分配(不分页)
{
    可重定位
    无法放入新进程时 等待释放后重定位
    首次适应算法/循环首次适应算法（按空白区首地址排序）
    {
        提取出空内存  按大小链接为链表（首地址和大小 体现在图像上） 在链表里选取可放下的最小内存块
        如果选取的内存剩余的容量小于设定的阈值则不用划分为新的空内存区，防止碎片
        回收时注意合并空白区

        首次：从链表第一个开始遍历
        循环：从上次位置开始遍历
    }
    最佳适应算法/最坏适应算法（按空白区大小排序）
    {
        最佳：从最小开始找
        最坏：从最大开始找
    }
}
 
 用户设定新进程 内存大小 下拉框选择要释放的进程

 页：固定大小
 段：按程序功能分{数据段 代码段}
离散(分页 二维表 分段)
{
    链表留作待用
    从前往后遍历物理内存，有空页就可以放置
    放不下...
}
